/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Example } from "@prisma/client";

export class ExampleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ExampleCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleCountArgs>
  ): Promise<number> {
    return this.prisma.example.count(args);
  }

  async examples<T extends Prisma.ExampleFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleFindManyArgs>
  ): Promise<Example[]> {
    return this.prisma.example.findMany(args);
  }
  async example<T extends Prisma.ExampleFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleFindUniqueArgs>
  ): Promise<Example | null> {
    return this.prisma.example.findUnique(args);
  }
  async createExample<T extends Prisma.ExampleCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleCreateArgs>
  ): Promise<Example> {
    return this.prisma.example.create<T>(args);
  }
  async updateExample<T extends Prisma.ExampleUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleUpdateArgs>
  ): Promise<Example> {
    return this.prisma.example.update<T>(args);
  }
  async deleteExample<T extends Prisma.ExampleDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExampleDeleteArgs>
  ): Promise<Example> {
    return this.prisma.example.delete(args);
  }
}
