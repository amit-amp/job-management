/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ApiRequest, Project } from "@prisma/client";

export class ApiRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ApiRequestCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestCountArgs>
  ): Promise<number> {
    return this.prisma.apiRequest.count(args);
  }

  async apiRequests<T extends Prisma.ApiRequestFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestFindManyArgs>
  ): Promise<ApiRequest[]> {
    return this.prisma.apiRequest.findMany(args);
  }
  async apiRequest<T extends Prisma.ApiRequestFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestFindUniqueArgs>
  ): Promise<ApiRequest | null> {
    return this.prisma.apiRequest.findUnique(args);
  }
  async createApiRequest<T extends Prisma.ApiRequestCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestCreateArgs>
  ): Promise<ApiRequest> {
    return this.prisma.apiRequest.create<T>(args);
  }
  async updateApiRequest<T extends Prisma.ApiRequestUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestUpdateArgs>
  ): Promise<ApiRequest> {
    return this.prisma.apiRequest.update<T>(args);
  }
  async deleteApiRequest<T extends Prisma.ApiRequestDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApiRequestDeleteArgs>
  ): Promise<ApiRequest> {
    return this.prisma.apiRequest.delete(args);
  }

  async getProject(parentId: string): Promise<Project | null> {
    return this.prisma.apiRequest
      .findUnique({
        where: { id: parentId },
      })
      .project();
  }
}
